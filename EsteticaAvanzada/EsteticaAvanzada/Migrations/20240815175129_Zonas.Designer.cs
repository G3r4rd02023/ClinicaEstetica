// <auto-generated />
using System;
using EsteticaAvanzada.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EsteticaAvanzada.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240815175129_Zonas")]
    partial class Zonas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EsteticaAvanzada.Data.Entidades.AnalisisEstetico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Acne")
                        .HasColumnType("bit");

                    b.Property<bool>("Cicatrices")
                        .HasColumnType("bit");

                    b.Property<bool>("ComedonesBlancos")
                        .HasColumnType("bit");

                    b.Property<bool>("ComedonesNegros")
                        .HasColumnType("bit");

                    b.Property<bool>("ComedonesNinguno")
                        .HasColumnType("bit");

                    b.Property<string>("ConsentimientoInformado")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("DeshidratacionAlta")
                        .HasColumnType("bit");

                    b.Property<bool>("DeshidratacionLeve")
                        .HasColumnType("bit");

                    b.Property<bool>("DeshidratacionMedio")
                        .HasColumnType("bit");

                    b.Property<string>("DiagnosticoEstetico")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("EspecifiqueOtros")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Frontales")
                        .HasColumnType("bit");

                    b.Property<bool>("Labios")
                        .HasColumnType("bit");

                    b.Property<bool>("Macula")
                        .HasColumnType("bit");

                    b.Property<bool>("Nasogenianos")
                        .HasColumnType("bit");

                    b.Property<bool>("Nevus")
                        .HasColumnType("bit");

                    b.Property<string>("ObjetivosTratamiento")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("OrbicularesOjos")
                        .HasColumnType("bit");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<bool>("PielDesvitalizada")
                        .HasColumnType("bit");

                    b.Property<bool>("PielGrasa")
                        .HasColumnType("bit");

                    b.Property<bool>("PielHidratada")
                        .HasColumnType("bit");

                    b.Property<bool>("PielMixta")
                        .HasColumnType("bit");

                    b.Property<bool>("PielNormal")
                        .HasColumnType("bit");

                    b.Property<bool>("PielSeca")
                        .HasColumnType("bit");

                    b.Property<bool>("PorosAbiertos")
                        .HasColumnType("bit");

                    b.Property<bool>("PorosContraidos")
                        .HasColumnType("bit");

                    b.Property<bool>("PorosSemivisibles")
                        .HasColumnType("bit");

                    b.Property<string>("ProductosUsados")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Telangiectasias")
                        .HasColumnType("bit");

                    b.Property<bool>("TexturaFina")
                        .HasColumnType("bit");

                    b.Property<bool>("TexturaGruesa")
                        .HasColumnType("bit");

                    b.Property<bool>("TexturaMediana")
                        .HasColumnType("bit");

                    b.Property<string>("TratamientoProposito")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("AnalisisEsteticos");
                });

            modelBuilder.Entity("EsteticaAvanzada.Data.Entidades.AntecedentesFamiliares", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Asma")
                        .HasColumnType("bit");

                    b.Property<bool>("Cancer")
                        .HasColumnType("bit");

                    b.Property<bool>("Diabetes")
                        .HasColumnType("bit");

                    b.Property<bool>("HTA")
                        .HasColumnType("bit");

                    b.Property<bool>("Otro")
                        .HasColumnType("bit");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("AntecedentesFamiliares");
                });

            modelBuilder.Entity("EsteticaAvanzada.Data.Entidades.AntecedentesQuirurgicos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Cirugia")
                        .HasColumnType("bit");

                    b.Property<string>("HispitalizacionesEspecificar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Hospitalizaciones")
                        .HasColumnType("bit");

                    b.Property<bool>("ImplantesEsteticos")
                        .HasColumnType("bit");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("AntecedentesQuirurgicos");
                });

            modelBuilder.Entity("EsteticaAvanzada.Data.Entidades.BotoxAplicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Corrugador")
                        .HasColumnType("bit");

                    b.Property<bool>("Frontal")
                        .HasColumnType("bit");

                    b.Property<bool>("Mentoniano")
                        .HasColumnType("bit");

                    b.Property<bool>("Nasal")
                        .HasColumnType("bit");

                    b.Property<string>("NumeroLote")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("OrbicularLabios")
                        .HasColumnType("bit");

                    b.Property<bool>("OrbicularOjos")
                        .HasColumnType("bit");

                    b.Property<string>("Otras")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PlanAplicacionId")
                        .HasColumnType("int");

                    b.Property<bool>("Procerus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ProximaSesion")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalUnidadesInyectadas")
                        .HasColumnType("int");

                    b.Property<string>("ZonasAplicadas")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("PlanAplicacionId");

                    b.ToTable("BotoxAplicaciones");
                });

            modelBuilder.Entity("EsteticaAvanzada.Data.Entidades.DatosEsteticos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AcidoHialuronico")
                        .HasColumnType("bit");

                    b.Property<bool>("Bichectomia")
                        .HasColumnType("bit");

                    b.Property<bool>("Blefaroplastia")
                        .HasColumnType("bit");

                    b.Property<bool>("Botox")
                        .HasColumnType("bit");

                    b.Property<string>("HaceCuantoTiempo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Lifting")
                        .HasColumnType("bit");

                    b.Property<bool>("Mejillas")
                        .HasColumnType("bit");

                    b.Property<bool>("Menton")
                        .HasColumnType("bit");

                    b.Property<bool>("Nariz")
                        .HasColumnType("bit");

                    b.Property<bool>("NingunImplante")
                        .HasColumnType("bit");

                    b.Property<bool>("NingunProcedimiento")
                        .HasColumnType("bit");

                    b.Property<bool>("NingunaCirugia")
                        .HasColumnType("bit");

                    b.Property<bool>("Otoplastia")
                        .HasColumnType("bit");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<bool>("Plasma")
                        .HasColumnType("bit");

                    b.Property<bool>("Rinoplastia")
                        .HasColumnType("bit");

                    b.Property<bool>("Septoplastia")
                        .HasColumnType("bit");

                    b.Property<bool>("VitaminaC")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("DatosEsteticos");
                });

            modelBuilder.Entity("EsteticaAvanzada.Data.Entidades.DiagnosticoTratamiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Diagnostico")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirmaAutorizacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<string>("Tratamiento")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("DiagnosticosTratamientos");
                });

            modelBuilder.Entity("EsteticaAvanzada.Data.Entidades.EstadoSalud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Abortos")
                        .HasColumnType("int");

                    b.Property<string>("AlergiaAnestesicos")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AlergiaCosmeticos")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("AlergiaMedicamentos")
                        .HasColumnType("bit");

                    b.Property<string>("AlergiaOtros")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AlergiaPerfumes")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("AntOncologicos")
                        .HasColumnType("bit");

                    b.Property<string>("AntOncologicosEspecificar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Artritis")
                        .HasColumnType("bit");

                    b.Property<bool>("CaidaCabello")
                        .HasColumnType("bit");

                    b.Property<bool>("Cardiacos")
                        .HasColumnType("bit");

                    b.Property<string>("CardiacosEspecificar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Cesareas")
                        .HasColumnType("int");

                    b.Property<bool>("Convulsiones")
                        .HasColumnType("bit");

                    b.Property<bool>("Diabetes")
                        .HasColumnType("bit");

                    b.Property<bool>("Digestivos")
                        .HasColumnType("bit");

                    b.Property<string>("DigestivosEspecificar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Edemas")
                        .HasColumnType("bit");

                    b.Property<int>("Embarazos")
                        .HasColumnType("int");

                    b.Property<bool>("Estreñimiento")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaUltimaMenstruacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Hipertension")
                        .HasColumnType("bit");

                    b.Property<bool>("Hipoglucemia")
                        .HasColumnType("bit");

                    b.Property<bool>("LactanciaMaterna")
                        .HasColumnType("bit");

                    b.Property<bool>("LentesContacto")
                        .HasColumnType("bit");

                    b.Property<string>("MedicamentosActuales")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MetodoAnticonceptivo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("OtrosPadecimientos")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<int>("Partos")
                        .HasColumnType("int");

                    b.Property<bool>("PortaMarcapasos")
                        .HasColumnType("bit");

                    b.Property<bool>("ProtesisMetalicas")
                        .HasColumnType("bit");

                    b.Property<bool>("Respiratorios")
                        .HasColumnType("bit");

                    b.Property<string>("RespiratoriosEspecificar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Sincope")
                        .HasColumnType("bit");

                    b.Property<bool>("Tiroides")
                        .HasColumnType("bit");

                    b.Property<string>("TiroidesEspecificar")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("EstadoSalud");
                });

            modelBuilder.Entity("EsteticaAvanzada.Data.Entidades.Habitos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Alcohol")
                        .HasColumnType("bit");

                    b.Property<string>("Drogas")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EspecifiqueDeporte")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Frecuencia")
                        .HasColumnType("int");

                    b.Property<int>("HorasSueño")
                        .HasColumnType("int");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<bool>("PracticaDeporte")
                        .HasColumnType("bit");

                    b.Property<bool>("Tabaco")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UltimaIngesta")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("Habitos");
                });

            modelBuilder.Entity("EsteticaAvanzada.Data.Entidades.Imagenes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaSubida")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreArchivo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<string>("RutaArchivo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("Imagenes");
                });

            modelBuilder.Entity("EsteticaAvanzada.Data.Entidades.JuvedermAplicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PlanAplicacionId")
                        .HasColumnType("int");

                    b.Property<string>("Producto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("VolumenML")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("ZonasTratamiento")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("PlanAplicacionId");

                    b.ToTable("JuvedermAplicaciones");
                });

            modelBuilder.Entity("EsteticaAvanzada.Data.Entidades.MedidasCorporales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AbdomenFinal")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("AbdomenInicio")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("AbdomenMedio")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("BrazoDerFinal")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("BrazoDerInicio")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("BrazoDerMedio")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("BrazoIzqFinal")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("BrazoIzqInicio")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("BrazoIzqMedio")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("BustoFinal")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("BustoInicio")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("ButoMedio")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("CaderaFinal")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("CaderaInicio")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("CaderaMedio")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("CinturaFinal")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("CinturaInicio")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("CinturaMedio")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("MusloDerFinal")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("MusloDerInicio")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("MusloDerMedio")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("MusloIzqFinal")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("MusloIzqInicio")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("MusloIzqMedio")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<decimal>("PantorillaDerFinal")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("PantorillaIzqFinal")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("PantorrillaDerInicio")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("PantorrillaDerMedio")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("PantorrillaIzqInicio")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("PantorrillaIzqMedio")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("MedidasCorporales");
                });

            modelBuilder.Entity("EsteticaAvanzada.Data.Entidades.MotivoConsulta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Acne")
                        .HasColumnType("bit");

                    b.Property<bool>("AdiposidadLocalizada")
                        .HasColumnType("bit");

                    b.Property<bool>("Arrugas")
                        .HasColumnType("bit");

                    b.Property<bool>("Celulitis")
                        .HasColumnType("bit");

                    b.Property<bool>("CuidadoPiel")
                        .HasColumnType("bit");

                    b.Property<bool>("Envejecimiento")
                        .HasColumnType("bit");

                    b.Property<bool>("Estrias")
                        .HasColumnType("bit");

                    b.Property<bool>("Flacidez")
                        .HasColumnType("bit");

                    b.Property<bool>("Manchas")
                        .HasColumnType("bit");

                    b.Property<string>("Otros")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<bool>("Rosacea")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("MotivoConsultas");
                });

            modelBuilder.Entity("EsteticaAvanzada.Data.Entidades.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombrePaciente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("EsteticaAvanzada.Data.Entidades.PlanAplicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaAplicacionBotox")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaAplicacionJuvederm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NuevaAplicacionFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RetornoEvaluacionFecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RetornoEvaluacionHora")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("PlanAplicacion");
                });

            modelBuilder.Entity("EsteticaAvanzada.Data.Entidades.SesionesProgramadas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Sesion10Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Sesion1Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Sesion2Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Sesion3Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Sesion4Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Sesion5Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Sesion6Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Sesion7Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Sesion8Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Sesion9Fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("SesionesProgramadas");
                });

            modelBuilder.Entity("EsteticaAvanzada.Data.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.Property<string>("URLFoto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("EsteticaAvanzada.Data.Entidades.AnalisisEstetico", b =>
                {
                    b.HasOne("EsteticaAvanzada.Data.Entidades.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("EsteticaAvanzada.Data.Entidades.AntecedentesFamiliares", b =>
                {
                    b.HasOne("EsteticaAvanzada.Data.Entidades.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("EsteticaAvanzada.Data.Entidades.AntecedentesQuirurgicos", b =>
                {
                    b.HasOne("EsteticaAvanzada.Data.Entidades.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("EsteticaAvanzada.Data.Entidades.BotoxAplicacion", b =>
                {
                    b.HasOne("EsteticaAvanzada.Data.Entidades.PlanAplicacion", "PlanAplicacion")
                        .WithMany()
                        .HasForeignKey("PlanAplicacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlanAplicacion");
                });

            modelBuilder.Entity("EsteticaAvanzada.Data.Entidades.DatosEsteticos", b =>
                {
                    b.HasOne("EsteticaAvanzada.Data.Entidades.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("EsteticaAvanzada.Data.Entidades.DiagnosticoTratamiento", b =>
                {
                    b.HasOne("EsteticaAvanzada.Data.Entidades.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("EsteticaAvanzada.Data.Entidades.EstadoSalud", b =>
                {
                    b.HasOne("EsteticaAvanzada.Data.Entidades.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("EsteticaAvanzada.Data.Entidades.Habitos", b =>
                {
                    b.HasOne("EsteticaAvanzada.Data.Entidades.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("EsteticaAvanzada.Data.Entidades.Imagenes", b =>
                {
                    b.HasOne("EsteticaAvanzada.Data.Entidades.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("EsteticaAvanzada.Data.Entidades.JuvedermAplicacion", b =>
                {
                    b.HasOne("EsteticaAvanzada.Data.Entidades.PlanAplicacion", "PlanAplicacion")
                        .WithMany()
                        .HasForeignKey("PlanAplicacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlanAplicacion");
                });

            modelBuilder.Entity("EsteticaAvanzada.Data.Entidades.MedidasCorporales", b =>
                {
                    b.HasOne("EsteticaAvanzada.Data.Entidades.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("EsteticaAvanzada.Data.Entidades.MotivoConsulta", b =>
                {
                    b.HasOne("EsteticaAvanzada.Data.Entidades.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("EsteticaAvanzada.Data.Entidades.PlanAplicacion", b =>
                {
                    b.HasOne("EsteticaAvanzada.Data.Entidades.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("EsteticaAvanzada.Data.Entidades.SesionesProgramadas", b =>
                {
                    b.HasOne("EsteticaAvanzada.Data.Entidades.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });
#pragma warning restore 612, 618
        }
    }
}
